/**
  \example tee.cpp 

  Sometimes you might want a packet handler to respond to more than
  one type of packet, in which case you have basically two choices.
  If there's just a few packet types involved, you can create multiple
  reflexes that associate the same handler with each different type --
  that's what we did in \ref forward.cpp.

  But if there's many packet types involved, that's a pain (and you'll
  eventually have to build a handler table and use the
  SFBReactor::reflexes() method).

  As an alternative, the core software allows you to register a
  'catch-all' handler that will be called if no other packet handler
  seems appropriate.  The SFBReactor::otherwise() method is used to
  register such a packet handler.

  In this sketch, any otherwise unhandled packets arriving on the east
  or west faces are forwarded out the opposite face.  In addition, for
  classified Department of IXM Security (DIS) purposes, a copy of the
  forwarded packet is 'L'ogged to the north face.

 */
